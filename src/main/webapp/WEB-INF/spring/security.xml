<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <http pattern="/css/**" security="none"/>
    <http pattern="/login" security="none"/>
    <http pattern="/registration" security="none"/>
    <http pattern="/resources/**" security="none"></http>

    <http auto-config="false" use-expressions="true" entry-point-ref="authenticationEntryPoint"
          access-denied-page="/login?error=true">
        <intercept-url pattern="/login" access="permitAll"></intercept-url>
        <intercept-url pattern="/logout" access="permitAll"></intercept-url>
        <intercept-url pattern="/settings/*" access="hasRole('ROLE_ADMIN')"></intercept-url>
        <intercept-url pattern="/**" access="permitAll"></intercept-url>
        <!--intercept-url pattern="/**" access="hasRole('ROLE_USER')"></intercept-url-->
        <custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER"/>
        <!--form-login login-page="/login" default-target-url="/"
                    always-use-default-target="true"
                    authentication-failure-url="/login.jsp?error=true"></form-login-->
        <logout logout-url="/logout" logout-success-url="/"></logout>

    </http>

    <!--authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userService">
            <password-encoder hash="md5" />
        </authentication-provider>
    </authentication-manager-->
    <beans:bean id="userService" class="com.vostrik.service.impl.UserServiceImpl">
    </beans:bean>

    <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <beans:property name="basenames">
            <beans:list>
                <beans:value>ValidationMessages</beans:value>
                <beans:value>messages_en</beans:value>
                <beans:value>messages_ru</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>


    <!-- Custom filter for username and password. The real customization is done in the customAthenticationManager -->
    <beans:bean id="authenticationFilter"
                class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
                p:authenticationManager-ref="customAuthenticationManager"
                p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
                p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler">
    </beans:bean>


    <!-- Custom authentication manager. In order to authenticate, username and password must not be the same -->
    <!--beans:bean id="customAuthenticationManager" class="com.vostrik.config.authority.TrackingAuthenticationManager" /-->


    <beans:bean id="customAuthenticationManager"
                class="org.springframework.security.authentication.ProviderManager">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref local="customAuthenticationProvider"/>
                <!--beans:ref local="adminAuthenticationProvider"/-->
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="customAuthenticationProvider"
                class="com.vostrik.config.authority.provider.CustomAuthenticationProvider">
    </beans:bean>

    <!--beans:bean id="adminAuthenticationProvider"
                class="com.vostrik.config.authority.provider.AdminAuthenticationProvider">
    </beans:bean-->
    <!-- We just actually need to set the default failure url here -->
    <beans:bean id="customAuthenticationFailureHandler"
                class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
                p:defaultFailureUrl="/login?error=true"/>

    <!-- We just actually need to set the default target url here -->
    <beans:bean id="customAuthenticationSuccessHandler"
                class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
                p:defaultTargetUrl="/settings/view"/>

    <!-- The AuthenticationEntryPoint is responsible for redirecting the user to a particular page, like a login page,
            whenever the server sends back a response requiring authentication -->
    <!-- See Spring-Security Reference 5.4.1 for more info -->
    <beans:bean id="authenticationEntryPoint"
                class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
                p:loginFormUrl="/login"/>

    <!-- The tag below has no use but Spring Security needs it to autowire the parent property of
        org.springframework.security.authentication.ProviderManager. Otherwise we get an error
        A probable bug. This is still under investigation-->
    <authentication-manager/>

</beans:beans>

